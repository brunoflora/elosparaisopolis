//Google Maps API
//Author: Junior Magalhães

function initialize() {

 var pinkParksStyles = [
  {
    featureType: "all",
    stylers: [
      { saturation: -10 }
    ]
  },
  {
    featureType: "poi.park",
    stylers: [
      { hue: "#ed125f" },
      { saturation: 100 }
    ]
  }
  ];
  var pinkMapType = new google.maps.StyledMapType(pinkParksStyles,
    {name: "Interface Parks"});

var mapOptions = {
  center: new google.maps.LatLng(-23.614565,-46.726154),
  zoom: 15,
  scrollwheel: false,   
  mapTypeControl: true,
  mapTypeIds: [google.maps.MapTypeId.SATELLITE, 'green_parks']
};

var map = new google.maps.Map(document.getElementById("map_canvas"),
    mapOptions);

var image = 'img/place.png';
var projectspin = 'img/pin_25_30.png';

var marker = new google.maps.Marker({
    position: map.getCenter(),
    map: map,
    icon: image,
    title: 'Paraisópolis'
  });

var markers = [
      ['Balé Paraisópolis', -23.614938,-46.72432],
      ['Capoeira Thiago Camilo', -23.61655,-46.727389],
      ['Orquestra Sinfônica', -23.617592,-46.725586]
    ];

var infowindow = new google.maps.InfoWindow(), marker, i;
for (i = 0; i < markers.length; i++) {  
    marker = new google.maps.Marker({
        position: new google.maps.LatLng(markers[i][1], markers[i][2]),
        map: map,
        icon: projectspin,
    });
    google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
            infowindow.setContent(markers[i][0]);
            infowindow.open(map, marker);
        }
    })(marker, i));
}

google.maps.event.addListener(map, 'center_changed', function() {
    // 3 seconds after the center of the map has changed, pan back to the
    // marker.
    window.setTimeout(function() {
      map.panTo(marker.getPosition());
    }, 3000);
  });

  google.maps.event.addListener(marker, 'click', function() {
    map.setZoom(17);
    map.setCenter(marker.getPosition());
    mapTypeId: google.maps.MapTypeId.SATELLITE
  });

  //use mapTypes to register pinkMapType
  map.mapTypes.set('green_parks', pinkMapType);
    
  //Insert styled map in overlayMapTypes.
  map.overlayMapTypes.insertAt(0, pinkMapType);
    
  //map.setMapTypeId(google.maps.MapTypeId.SATELLITE);
  map.setMapTypeId(google.maps.MapTypeId.SATELLITE);

}

//Instagram

var feed = new Instafeed({
        get: 'tagged',
        tagName: 'paraisópolis',
        clientId: 'f5fdd1f6668d47c9801fe2127e8ef36a',
        limit: '23'
    });
    feed.run();

//Angular.js

function ProjectsController($scope) {
    $scope.projects = [
        {
          nome: 'Projeto Balé',
          author: 'Joildo Santos',
          contact: '(11) 9999-9999',
          desc: '100 crianças na faixa etária de 9 a 12 anos, moradoras de Paraisópolis (São Paulo - SP), aprenderão balé clássico na própria comunidade. O projeto de ensino de dança, totalmente gratuito'
        },
    ];

    $scope.adicionaItem = function () {

        $scope.projects.push({
            nome: $scope.project.nome,
            author: $scope.project.author,
            contact: $scope.project.contact,
            desc: $scope.project.desc,
        });
    };
}

$('button').click(function() {
  $('#myModal').trigger('reveal:close');
});

// Generated by CoffeeScript 1.6.2
(function() {
  var Kudoable,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Kudoable = (function() {
    function Kudoable(element) {
      this.element = element;
      this.unkudo = __bind(this.unkudo, this);
      this.complete = __bind(this.complete, this);
      this.end = __bind(this.end, this);
      this.start = __bind(this.start, this);
      this.bindEvents();
      this.counter = $('.count .num', this.element);
      this.element.data('kudoable', this);
    }

    Kudoable.prototype.bindEvents = function() {
      this.element.mouseenter(this.start);
      this.element.mouseleave(this.end);
      this.element.click(this.unkudo);
      $(this.element).on('touchstart', this.element, this.start);
      return $(this.element).on('touchend', this.element, this.end);
    };

    Kudoable.prototype.isKudoable = function() {
      return this.element.hasClass('kudoable');
    };

    Kudoable.prototype.isKudod = function() {
      return this.element.hasClass('complete');
    };

    Kudoable.prototype.start = function() {
      if (this.isKudoable() && !this.isKudod()) {
        this.element.trigger('kudo:active');
        this.element.addClass('active');
        return this.timer = setTimeout(this.complete, 700);
      }
    };

    Kudoable.prototype.end = function() {
      if (this.isKudoable() && !this.isKudod()) {
        this.element.trigger('kudo:inactive');
        this.element.removeClass('active');
        if (this.timer != null) {
          return clearTimeout(this.timer);
        }
      }
    };

    Kudoable.prototype.complete = function() {
      this.end();
      this.incrementCount();
      this.element.addClass('complete');
      return this.element.trigger('kudo:added');
    };

    Kudoable.prototype.unkudo = function(event) {
      event.preventDefault();
      if (this.isKudod()) {
        this.decrementCount();
        this.element.removeClass('complete');
        return this.element.trigger('kudo:removed');
      }
    };

    Kudoable.prototype.setCount = function(count) {
      return this.counter.html(count);
    };

    Kudoable.prototype.currentCount = function() {
      return parseInt(this.counter.html());
    };

    Kudoable.prototype.incrementCount = function() {
      return this.setCount(this.currentCount() + 1);
    };

    Kudoable.prototype.decrementCount = function() {
      return this.setCount(this.currentCount() - 1);
    };

    return Kudoable;

  })();

  jQuery(function($) {
    return $.fn.kudoable = function() {
      return this.each(function() {
        return new Kudoable($(this));
      });
    };
  });

}).call(this);


// KUDOS

// needs to be a string for jquery.cookie
      var postId = '1'; 

      $(function()
      {
        // initialize kudos
        $("figure.kudoable").kudoable();

        // check to see if user has already kudod
        // fyi cookies do not work when you are viewing this as a file
        if($.cookie(postId) == 'true') {
          // make kudo already kudod
          $("figure.kudoable").removeClass("animate").addClass("complete");

          // your server would take care of the proper kudos count, but because this is a
          // static page, we need to set it here so it doesn't become -1 when you remove
          // the kudos after a reload
          $(".num").html(1);
        } 

        // when kudoing
        $("figure.kudo").bind("kudo:active", function(e)
        {
          console.log("kudoing active");
        });

        // when not kudoing
        $("figure.kudo").bind("kudo:inactive", function(e)
        {
          console.log("kudoing inactive");
        });

        // after kudo'd
        $("figure.kudo").bind("kudo:added", function(e)
        {
          var element = $(this);
          // ajax'y stuff or whatever you want
          console.log("Kodo'd:", element.data('id'), ":)");

          // set cookie so user cannot kudo again for 7 days
          $.cookie(postId, 'true', { expires: 7 });
        });

        // after removing a kudo
        $("figure.kudo").bind("kudo:removed", function(e)
        {
          var element = $(this);
          // ajax'y stuff or whatever you want
          console.log("Un-Kudo'd:", element.data('id'), ":(");

          // remove cookie
          $.removeCookie(postId);
        });
      });
      $('.play').click(function() {
                $('.play').hide();
                $('#video').append('<iframe width="1280" height="720" class="iframe" src="http://www.youtube.com/embed/QNstSOucpBU?autoplay=1" frameborder="0" allowfullscreen></iframe>');
            });

/* ==========================================================================
ChardinJS
========================================================================== */

// Generated by CoffeeScript 1.6.2
(function(){var e=[].slice;(function(t,n){var r;return r=function(){function e(e){var r=this;this.$el=t(e),t(n).resize(function(){return r.refresh()})}return e.prototype.start=function(){var e,t,n,r;if(this._overlay_visible())return!1;this._add_overlay_layer(),r=this.$el.find("*[data-intro]");for(t=0,n=r.length;t<n;t++)e=r[t],this._show_element(e);return this.$el.trigger("chardinJs:start")},e.prototype.toggle=function(){return this._overlay_visible()?this.stop():this.start()},e.prototype.refresh=function(){var e,t,n,r,i;if(this._overlay_visible()){r=this.$el.find("*[data-intro]"),i=[];for(t=0,n=r.length;t<n;t++)e=r[t],i.push(this._position_helper_layer(e));return i}return this},e.prototype.stop=function(){return this.$el.find(".chardinjs-overlay").fadeOut(function(){return t(this).remove()}),this.$el.find(".chardinjs-helper-layer").remove(),this.$el.find(".chardinjs-show-element").removeClass("chardinjs-show-element"),this.$el.find(".chardinjs-relative-position").removeClass("chardinjs-relative-position"),n.removeEventListener?n.removeEventListener("keydown",this._onKeyDown,!0):document.detachEvent&&document.detachEvent("onkeydown",this._onKeyDown),this.$el.trigger("chardinJs:stop")},e.prototype._overlay_visible=function(){return this.$el.find(".chardinjs-overlay").length!==0},e.prototype._add_overlay_layer=function(){var e,t,n,r=this;return this._overlay_visible()?!1:(t=document.createElement("div"),n="",t.className="chardinjs-overlay",this.$el.prop("tagName")==="BODY"?(n+="top: 0;bottom: 0; left: 0;right: 0;position: fixed;",t.setAttribute("style",n)):(e=this._get_offset(this.$el.get()[0]),e&&(n+="width: "+e.width+"px; height:"+e.height+"px; top:"+e.top+"px;left: "+e.left+"px;",t.setAttribute("style",n))),this.$el.get()[0].appendChild(t),t.onclick=function(){return r.stop()},setTimeout(function(){return n+="opacity: .8;",t.setAttribute("style",n)},10))},e.prototype._get_position=function(e){return e.getAttribute("data-position")||"bottom"},e.prototype._place_tooltip=function(e){var n,r,i,s,o,u,a;u=t(e).data("tooltip_layer"),a=this._get_offset(u),u.style.top=null,u.style.right=null,u.style.bottom=null,u.style.left=null;switch(this._get_position(e)){case"top":case"bottom":i=this._get_offset(e),o=i.width,r=t(u).width(),u.style.left=""+(o/2-a.width/2)+"px";break;case"left":case"right":i=this._get_offset(e),s=i.height,n=t(u).height(),u.style.top=""+(s/2-a.height/2)+"px"}switch(this._get_position(e)){case"left":return u.style.left="-"+(a.width-34)+"px";case"right":return u.style.right="-"+(a.width-34)+"px";case"bottom":return u.style.bottom="-"+a.height+"px";case"top":return u.style.top="-"+a.height+"px"}},e.prototype._position_helper_layer=function(e){var n,r;return r=t(e).data("helper_layer"),n=this._get_offset(e),r.setAttribute("style","width: "+n.width+"px; height:"+n.height+"px; top:"+n.top+"px; left: "+n.left+"px;")},e.prototype._show_element=function(e){var n,r,i,s;r=this._get_offset(e),i=document.createElement("div"),s=document.createElement("div"),t(e).data("helper_layer",i).data("tooltip_layer",s),e.id&&i.setAttribute("data-id",e.id),i.className="chardinjs-helper-layer chardinjs-"+this._get_position(e),this._position_helper_layer(e),this.$el.get()[0].appendChild(i),s.className="chardinjs-tooltip chardinjs-"+this._get_position(e),s.innerHTML="<div class='chardinjs-tooltiptext'>"+e.getAttribute("data-intro")+"</div>",i.appendChild(s),this._place_tooltip(e),e.className+=" chardinjs-show-element",n="",e.currentStyle?n=e.currentStyle.position:document.defaultView&&document.defaultView.getComputedStyle&&(n=document.defaultView.getComputedStyle(e,null).getPropertyValue("position")),n=n.toLowerCase();if(n!=="absolute"&&n!=="relative")return e.className+=" chardinjs-relative-position"},e.prototype._get_offset=function(e){var t,n,r;t={width:e.offsetWidth,height:e.offsetHeight},n=0,r=0;while(e&&!isNaN(e.offsetLeft)&&!isNaN(e.offsetTop))n+=e.offsetLeft,r+=e.offsetTop,e=e.offsetParent;return t.top=r,t.left=n,t},e}(),t.fn.extend({chardinJs:function(){var n,i,s,o;return o=arguments[0],i=2<=arguments.length?e.call(arguments,1):[],n=t(this[0]),s=n.data("chardinJs"),s||n.data("chardinJs",s=new r(this,o)),typeof o=="string"&&s[o].apply(s,i),s}})})(window.jQuery,window)}).call(this);

// Generated by CoffeeScript 1.6.2
(function() {
  $(function() {
    $('body').chardinJs();
    $('a[data-toggle="chardinjs"]').on('click', function(e) {
      e.preventDefault();
      if ($('.jumbotron').is(':visible')) {
        return ($('body').data('chardinJs')).toggle();
      } else {
        return $('.jumbotron').animate({
          height: 0
        }, 600, function() {
          return ($('body').data('chardinJs')).toggle();
        });
      }
    });
    return $('body').on('chardinJs:stop', function() {
      $('a.btn.primary').off('click').text('See more on Github').attr('href', 'https://github.com/heelhook/chardin.js');
      return $('a#opentour').css({
        display: 'block'
      });
    });
  });

}).call(this);